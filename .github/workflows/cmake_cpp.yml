name: CMake/C++ CI

on:
  push:
    branches:
      - testing_actions
  pull_request:
    branches:
      - testing_actions

jobs:
#  install-dependencies:
#    runs-on: [self-hosted, linux]
#    steps:
#        - name: install dependencies
#          run: |
#            sudo apt-get -y update
#            sudo apt install -y build-essential ninja-build clang
#            sudo apt install -y cmake ccache
#            sudo apt install -y qt5-default
#            sudo apt install -y libboost-atomic-dev libboost-all-dev
#            sudo apt install -y python2.7-dev python-numpy python-scipy
#            sudo apt install -y libpng-dev libjpeg-dev libtiff-dev zlib1g-dev libglew-dev
  run_in_container:
    runs-on: windows-latest
    container:
      image: windows:1806
    steps:
      - run: echo Hello World

  build:
#    needs: [install-dependencies]
    # ideally I'd like this to run in custom docker image instead of running directly in the self-hosted vm:
    runs-on: windows-latest
    steps:
      # Chechout the project's repo:
      - uses: actions/checkout@v1 
      
      - name: hello_world
        run: |
          docker run hello-world

      - name: hello_world_advanced
        run: |
          docker run mcr.microsoft.com/windows/nanoserver:1809 cmd.exe /s /c fsutil volume diskfree c:
          
      #- name: hello_world_advanced2
      #  run: |
      #    docker run --user $(id -u):$(id -g) --network=host -v $(pwd):$(pwd) \
      #    mcr.microsoft.com/windows:1809 cmd.exe /s /c echo Hello World
      
      # when running on a self-hosted vm with preinstalled deps this dependency step is not necessary of course...:
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja -DSOFA_BUILD_METIS=ON -DPLUGIN_SOFASPARSESOLVER=ON -DPLUGIN_SOFAPYTHON=ON
          
      - name: build
        run: |
          cd build
          ninja
          
      - name: install
        run: |
          cd build
          ninja install
          
  run-tests:
    needs: [build]
    runs-on: windows-latest
    steps:
      - name: run-tests
        run: |
          cd build/bin
          for f in *_test*
          do
            ./$f
          done
