# CMake package configuration file for SofaFramework

@PACKAGE_INIT@

list(FIND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}" HAS_SOFAFRAMEWORK_CMAKE_MODULE_PATH)
if(HAS_SOFAFRAMEWORK_CMAKE_MODULE_PATH EQUAL -1)
    list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})
endif()

include(SofaMacros)

# Help finding headers (install only)
# TODO: a better way to do this?
if(PACKAGE_PREFIX_DIR)
    list(APPEND CMAKE_INCLUDE_PATH "${PACKAGE_PREFIX_DIR}/include/WinDepPack")
    list(APPEND CMAKE_INCLUDE_PATH "${PACKAGE_PREFIX_DIR}/include/Eigen")
endif()

find_package(TinyXML REQUIRED)

set(SOFA_HAVE_ZLIB "@SOFA_HAVE_ZLIB@")
set(SOFA_HAVE_GLEW "@SOFA_HAVE_GLEW@")
set(SOFA_HAVE_BOOST "@SOFA_HAVE_BOOST@")
set(SOFA_NO_OPENGL "@SOFA_NO_OPENGL@")
set(SOFA_HAVE_GTEST "@SOFA_HAVE_GTEST@")

if(SOFA_HAVE_GTEST)
    find_package(GTest CONFIG REQUIRED)
endif()

if(SOFA_HAVE_ZLIB)
    find_package(ZLIB REQUIRED)
endif()

if(SOFA_HAVE_GLEW)
    find_package(GLEW REQUIRED)
endif()

if(SOFA_HAVE_BOOST)
    find_package(Boost QUIET REQUIRED system filesystem locale program_options OPTIONAL_COMPONENTS date_time thread)
endif()

foreach(target @SOFAFRAMEWORK_TARGETS@)
    # if any target of this project is undefined
    if(NOT TARGET ${target})
        # define all targets of this project
        include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")
        break()
    endif()
endforeach()

check_required_components(@SOFAFRAMEWORK_TARGETS@)
