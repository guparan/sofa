# CMake package configuration file for SofaFramework

@PACKAGE_INIT@

list(FIND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}" HAS_SOFAFRAMEWORK_CMAKE_MODULE_PATH)
if(HAS_SOFAFRAMEWORK_CMAKE_MODULE_PATH EQUAL -1)
    list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})
endif()

list(FIND CMAKE_PREFIX_PATH "${CMAKE_CURRENT_LIST_DIR}/../../../plugins" HAS_PLUGINS_CMAKE_PREFIX_PATH)
if(HAS_PLUGINS_CMAKE_PREFIX_PATH EQUAL -1)
    list(APPEND CMAKE_PREFIX_PATH "${CMAKE_CURRENT_LIST_DIR}/../../../plugins")
endif()

include(SofaMacros)

set(SOFA_HAVE_ZLIB "@SOFA_HAVE_ZLIB@")
set(SOFA_HAVE_GLEW "@SOFA_HAVE_GLEW@")
set(SOFA_HAVE_BOOST "@SOFA_HAVE_BOOST@")
set(SOFA_HAVE_GTEST "@SOFA_HAVE_GTEST@")

set(SOFA_NO_OPENGL "@SOFA_NO_OPENGL@")

set(SOFA_USE_MASK "@SOFA_USE_MASK@")

set(SOFA_WITH_DEVTOOLS "@SOFA_WITH_DEVTOOLS@")
set(SOFA_WITH_THREADING "@SOFA_WITH_THREADING@")
set(SOFA_WITH_DEPRECATED_COMPONENTS "@SOFA_WITH_DEPRECATED_COMPONENTS@")

# Find dependency headers
if(NOT WIN32)
    # Windows binaries already contain these headers in WinDepPack (publicly exposed by SofaHelper)
    if(SOFA_HAVE_ZLIB)
        find_package(ZLIB QUIET REQUIRED)
    endif()
    if(NOT SOFA_NO_OPENGL)
        find_package(OpenGL QUIET REQUIRED)
    endif()
    if(SOFA_HAVE_GLEW)
        find_package(GLEW QUIET REQUIRED)
    endif()
endif()
if(SOFA_HAVE_BOOST) # Boost headers are not provided by SOFA
    find_package(Boost QUIET REQUIRED system filesystem program_options OPTIONAL_COMPONENTS date_time thread)
endif()

foreach(target SofaHelper SofaDefaultType SofaCore)
    if(NOT TARGET ${target})
        include("${CMAKE_CURRENT_LIST_DIR}/SofaFrameworkTargets.cmake")
        break()
    endif()
endforeach()

check_required_components(SofaHelper SofaDefaultType SofaCore)
